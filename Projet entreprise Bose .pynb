{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mohachtou/projet-Data-Camp/blob/main/Projet%20entreprise%20Bose%20.pynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploration des Données . "
      ],
      "metadata": {
        "id": "8xvXpSyg4jxn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns \n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from IPython.core.pylabtools import figsize\n",
        "import plotly.express as px"
      ],
      "metadata": {
        "id": "v7s-3lo82K5d"
      },
      "execution_count": 161,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"/content/achat_enceinte.csv\", index_col=[0])\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "efnKBqox2TiM",
        "outputId": "ea134649-c514-48b3-bbe3-711be6d164d5"
      },
      "execution_count": 162,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0.1 PUISSANCE_WATT BLUETOOTH  RESPONSABLE_ACHAT  PUISSANCE_DB  \\\n",
              "0                 0       33 Watts      vrai  Tristan Veronneau            95   \n",
              "1                 1        96 Watt      FAUX     Magnolia Binet            95   \n",
              "2                 2       187 Watt      Vrai  tristan Veronneau            90   \n",
              "3                 3       68 Watts      VRAI    Laure Pomerleau            90   \n",
              "4                 4        86 Watt      vrai     Magnolia Binet           100   \n",
              "...             ...            ...       ...                ...           ...   \n",
              "99995         99995      151 Watts      vrai     Magnolia Binet            95   \n",
              "99996         99996       103 Watt      Faux  Tristan Veronneau            90   \n",
              "99997         99997       171 Watt      vrai    Laure Pomerleau            90   \n",
              "99998         99998       150 Watt      FAUX     Magnolia Binet            90   \n",
              "99999         99999       145 Watt      Faux  Tristan Veronneau            90   \n",
              "\n",
              "       LONGUEUR       COULEUR     FOURNISSEUR       PAYS  VOLUME  \\\n",
              "0            60          bleu  Fournisseur 16  Argentine   42135   \n",
              "1            40            or  Fournisseur 29    Turquie   38758   \n",
              "2            40        orrose  Fournisseur 20     France   75739   \n",
              "3            70        orrose  Fournisseur 28      Benin   71264   \n",
              "4            40        argent  Fournisseur 20      Chili   87145   \n",
              "...         ...           ...             ...        ...     ...   \n",
              "99995        30  argent rouge  Fournisseur 16    Mexique   66571   \n",
              "99996        10          noir  Fournisseur 15     Italie   60791   \n",
              "99997        70   argent noir  Fournisseur 17  Allemagne   65064   \n",
              "99998        60   bleu marine   Fournisseur 8     Italie   78450   \n",
              "99999        70          bleu  Fournisseur 16    Soudan#   98039   \n",
              "\n",
              "               COST          MANAGER  WATERPROOF  LONGUEUR (inch)        DATE  \n",
              "0       5069.924850  Pierre L'Hostis        True            23.62  2018-09-30  \n",
              "1       4651.456292  Pierre L'Hostis       False            15.75  2018-09-30  \n",
              "2      13352.032440  Pierre L'Hostis        True            15.75  2021-12-31  \n",
              "3      11718.814496    Cédric Grivet        True            27.56  2020-12-31  \n",
              "4      13193.906511  Pierre L'Hostis       False            15.75  2021-09-30  \n",
              "...             ...              ...         ...              ...         ...  \n",
              "99995  10074.195851  Pierre L'Hostis       False            11.81  2021-12-31  \n",
              "99996   4831.329399    Cédric Grivet        True             3.94  2018-03-31  \n",
              "99997  10986.307492  Pierre L'Hostis       False            27.56  2018-06-30  \n",
              "99998  11311.194800  Pierre L'Hostis       False            23.62  2021-09-30  \n",
              "99999  12611.942516  Pierre L'Hostis        True            27.56  2018-09-30  \n",
              "\n",
              "[100000 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c468b76-32f9-441e-baf2-afaefe583ca4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0.1</th>\n",
              "      <th>PUISSANCE_WATT</th>\n",
              "      <th>BLUETOOTH</th>\n",
              "      <th>RESPONSABLE_ACHAT</th>\n",
              "      <th>PUISSANCE_DB</th>\n",
              "      <th>LONGUEUR</th>\n",
              "      <th>COULEUR</th>\n",
              "      <th>FOURNISSEUR</th>\n",
              "      <th>PAYS</th>\n",
              "      <th>VOLUME</th>\n",
              "      <th>COST</th>\n",
              "      <th>MANAGER</th>\n",
              "      <th>WATERPROOF</th>\n",
              "      <th>LONGUEUR (inch)</th>\n",
              "      <th>DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33 Watts</td>\n",
              "      <td>vrai</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>95</td>\n",
              "      <td>60</td>\n",
              "      <td>bleu</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Argentine</td>\n",
              "      <td>42135</td>\n",
              "      <td>5069.924850</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>23.62</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>96 Watt</td>\n",
              "      <td>FAUX</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>95</td>\n",
              "      <td>40</td>\n",
              "      <td>or</td>\n",
              "      <td>Fournisseur 29</td>\n",
              "      <td>Turquie</td>\n",
              "      <td>38758</td>\n",
              "      <td>4651.456292</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>15.75</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>187 Watt</td>\n",
              "      <td>Vrai</td>\n",
              "      <td>tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>40</td>\n",
              "      <td>orrose</td>\n",
              "      <td>Fournisseur 20</td>\n",
              "      <td>France</td>\n",
              "      <td>75739</td>\n",
              "      <td>13352.032440</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>15.75</td>\n",
              "      <td>2021-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>68 Watts</td>\n",
              "      <td>VRAI</td>\n",
              "      <td>Laure Pomerleau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>orrose</td>\n",
              "      <td>Fournisseur 28</td>\n",
              "      <td>Benin</td>\n",
              "      <td>71264</td>\n",
              "      <td>11718.814496</td>\n",
              "      <td>Cédric Grivet</td>\n",
              "      <td>True</td>\n",
              "      <td>27.56</td>\n",
              "      <td>2020-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>86 Watt</td>\n",
              "      <td>vrai</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>100</td>\n",
              "      <td>40</td>\n",
              "      <td>argent</td>\n",
              "      <td>Fournisseur 20</td>\n",
              "      <td>Chili</td>\n",
              "      <td>87145</td>\n",
              "      <td>13193.906511</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>15.75</td>\n",
              "      <td>2021-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99995</th>\n",
              "      <td>99995</td>\n",
              "      <td>151 Watts</td>\n",
              "      <td>vrai</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>95</td>\n",
              "      <td>30</td>\n",
              "      <td>argent rouge</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Mexique</td>\n",
              "      <td>66571</td>\n",
              "      <td>10074.195851</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>11.81</td>\n",
              "      <td>2021-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99996</th>\n",
              "      <td>99996</td>\n",
              "      <td>103 Watt</td>\n",
              "      <td>Faux</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>10</td>\n",
              "      <td>noir</td>\n",
              "      <td>Fournisseur 15</td>\n",
              "      <td>Italie</td>\n",
              "      <td>60791</td>\n",
              "      <td>4831.329399</td>\n",
              "      <td>Cédric Grivet</td>\n",
              "      <td>True</td>\n",
              "      <td>3.94</td>\n",
              "      <td>2018-03-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99997</th>\n",
              "      <td>99997</td>\n",
              "      <td>171 Watt</td>\n",
              "      <td>vrai</td>\n",
              "      <td>Laure Pomerleau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>argent noir</td>\n",
              "      <td>Fournisseur 17</td>\n",
              "      <td>Allemagne</td>\n",
              "      <td>65064</td>\n",
              "      <td>10986.307492</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>27.56</td>\n",
              "      <td>2018-06-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99998</th>\n",
              "      <td>99998</td>\n",
              "      <td>150 Watt</td>\n",
              "      <td>FAUX</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>90</td>\n",
              "      <td>60</td>\n",
              "      <td>bleu marine</td>\n",
              "      <td>Fournisseur 8</td>\n",
              "      <td>Italie</td>\n",
              "      <td>78450</td>\n",
              "      <td>11311.194800</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>23.62</td>\n",
              "      <td>2021-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99999</th>\n",
              "      <td>99999</td>\n",
              "      <td>145 Watt</td>\n",
              "      <td>Faux</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>bleu</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Soudan#</td>\n",
              "      <td>98039</td>\n",
              "      <td>12611.942516</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>27.56</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100000 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c468b76-32f9-441e-baf2-afaefe583ca4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9c468b76-32f9-441e-baf2-afaefe583ca4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9c468b76-32f9-441e-baf2-afaefe583ca4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop(df.columns[[0,1,6,-2]], axis=1) \n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "BuJvXJfl21v4",
        "outputId": "9a5a52ec-871f-42d7-a567-6c8248bbf444"
      },
      "execution_count": 163,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      BLUETOOTH  RESPONSABLE_ACHAT  PUISSANCE_DB  LONGUEUR     FOURNISSEUR  \\\n",
              "0          vrai  Tristan Veronneau            95        60  Fournisseur 16   \n",
              "1          FAUX     Magnolia Binet            95        40  Fournisseur 29   \n",
              "2          Vrai  tristan Veronneau            90        40  Fournisseur 20   \n",
              "3          VRAI    Laure Pomerleau            90        70  Fournisseur 28   \n",
              "4          vrai     Magnolia Binet           100        40  Fournisseur 20   \n",
              "...         ...                ...           ...       ...             ...   \n",
              "99995      vrai     Magnolia Binet            95        30  Fournisseur 16   \n",
              "99996      Faux  Tristan Veronneau            90        10  Fournisseur 15   \n",
              "99997      vrai    Laure Pomerleau            90        70  Fournisseur 17   \n",
              "99998      FAUX     Magnolia Binet            90        60   Fournisseur 8   \n",
              "99999      Faux  Tristan Veronneau            90        70  Fournisseur 16   \n",
              "\n",
              "            PAYS  VOLUME          COST          MANAGER  WATERPROOF  \\\n",
              "0      Argentine   42135   5069.924850  Pierre L'Hostis        True   \n",
              "1        Turquie   38758   4651.456292  Pierre L'Hostis       False   \n",
              "2         France   75739  13352.032440  Pierre L'Hostis        True   \n",
              "3          Benin   71264  11718.814496    Cédric Grivet        True   \n",
              "4          Chili   87145  13193.906511  Pierre L'Hostis       False   \n",
              "...          ...     ...           ...              ...         ...   \n",
              "99995    Mexique   66571  10074.195851  Pierre L'Hostis       False   \n",
              "99996     Italie   60791   4831.329399    Cédric Grivet        True   \n",
              "99997  Allemagne   65064  10986.307492  Pierre L'Hostis       False   \n",
              "99998     Italie   78450  11311.194800  Pierre L'Hostis       False   \n",
              "99999    Soudan#   98039  12611.942516  Pierre L'Hostis        True   \n",
              "\n",
              "             DATE  \n",
              "0      2018-09-30  \n",
              "1      2018-09-30  \n",
              "2      2021-12-31  \n",
              "3      2020-12-31  \n",
              "4      2021-09-30  \n",
              "...           ...  \n",
              "99995  2021-12-31  \n",
              "99996  2018-03-31  \n",
              "99997  2018-06-30  \n",
              "99998  2021-09-30  \n",
              "99999  2018-09-30  \n",
              "\n",
              "[100000 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3725f02-6562-42f6-8e72-5c4d3066f9c4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BLUETOOTH</th>\n",
              "      <th>RESPONSABLE_ACHAT</th>\n",
              "      <th>PUISSANCE_DB</th>\n",
              "      <th>LONGUEUR</th>\n",
              "      <th>FOURNISSEUR</th>\n",
              "      <th>PAYS</th>\n",
              "      <th>VOLUME</th>\n",
              "      <th>COST</th>\n",
              "      <th>MANAGER</th>\n",
              "      <th>WATERPROOF</th>\n",
              "      <th>DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>vrai</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>95</td>\n",
              "      <td>60</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Argentine</td>\n",
              "      <td>42135</td>\n",
              "      <td>5069.924850</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>FAUX</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>95</td>\n",
              "      <td>40</td>\n",
              "      <td>Fournisseur 29</td>\n",
              "      <td>Turquie</td>\n",
              "      <td>38758</td>\n",
              "      <td>4651.456292</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Vrai</td>\n",
              "      <td>tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>40</td>\n",
              "      <td>Fournisseur 20</td>\n",
              "      <td>France</td>\n",
              "      <td>75739</td>\n",
              "      <td>13352.032440</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>2021-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>VRAI</td>\n",
              "      <td>Laure Pomerleau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>Fournisseur 28</td>\n",
              "      <td>Benin</td>\n",
              "      <td>71264</td>\n",
              "      <td>11718.814496</td>\n",
              "      <td>Cédric Grivet</td>\n",
              "      <td>True</td>\n",
              "      <td>2020-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>vrai</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>100</td>\n",
              "      <td>40</td>\n",
              "      <td>Fournisseur 20</td>\n",
              "      <td>Chili</td>\n",
              "      <td>87145</td>\n",
              "      <td>13193.906511</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>2021-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99995</th>\n",
              "      <td>vrai</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>95</td>\n",
              "      <td>30</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Mexique</td>\n",
              "      <td>66571</td>\n",
              "      <td>10074.195851</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>2021-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99996</th>\n",
              "      <td>Faux</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>10</td>\n",
              "      <td>Fournisseur 15</td>\n",
              "      <td>Italie</td>\n",
              "      <td>60791</td>\n",
              "      <td>4831.329399</td>\n",
              "      <td>Cédric Grivet</td>\n",
              "      <td>True</td>\n",
              "      <td>2018-03-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99997</th>\n",
              "      <td>vrai</td>\n",
              "      <td>Laure Pomerleau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>Fournisseur 17</td>\n",
              "      <td>Allemagne</td>\n",
              "      <td>65064</td>\n",
              "      <td>10986.307492</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>2018-06-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99998</th>\n",
              "      <td>FAUX</td>\n",
              "      <td>Magnolia Binet</td>\n",
              "      <td>90</td>\n",
              "      <td>60</td>\n",
              "      <td>Fournisseur 8</td>\n",
              "      <td>Italie</td>\n",
              "      <td>78450</td>\n",
              "      <td>11311.194800</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>False</td>\n",
              "      <td>2021-09-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99999</th>\n",
              "      <td>Faux</td>\n",
              "      <td>Tristan Veronneau</td>\n",
              "      <td>90</td>\n",
              "      <td>70</td>\n",
              "      <td>Fournisseur 16</td>\n",
              "      <td>Soudan#</td>\n",
              "      <td>98039</td>\n",
              "      <td>12611.942516</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>True</td>\n",
              "      <td>2018-09-30</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100000 rows × 11 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3725f02-6562-42f6-8e72-5c4d3066f9c4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e3725f02-6562-42f6-8e72-5c4d3066f9c4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e3725f02-6562-42f6-8e72-5c4d3066f9c4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#avoir des information sur note datasets \n",
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yIxv77Dp4So0",
        "outputId": "f05bc4c6-9101-40f9-f48b-67eff2311603"
      },
      "execution_count": 164,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 100000 entries, 0 to 99999\n",
            "Data columns (total 11 columns):\n",
            " #   Column             Non-Null Count   Dtype  \n",
            "---  ------             --------------   -----  \n",
            " 0   BLUETOOTH          100000 non-null  object \n",
            " 1   RESPONSABLE_ACHAT  100000 non-null  object \n",
            " 2   PUISSANCE_DB       100000 non-null  int64  \n",
            " 3   LONGUEUR           100000 non-null  int64  \n",
            " 4   FOURNISSEUR        100000 non-null  object \n",
            " 5   PAYS               100000 non-null  object \n",
            " 6   VOLUME             100000 non-null  int64  \n",
            " 7   COST               100000 non-null  float64\n",
            " 8   MANAGER            100000 non-null  object \n",
            " 9   WATERPROOF         100000 non-null  bool   \n",
            " 10  DATE               100000 non-null  object \n",
            "dtypes: bool(1), float64(1), int64(3), object(6)\n",
            "memory usage: 8.5+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#breif description sur notre dataset surtout leS varibale numerique \n",
        "# utilisation de la varibale transpose pour mieux visualiser le dataframe .\n",
        "df.describe().transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "5K1GWt_Q23DP",
        "outputId": "1277cfec-7f0d-4f92-c1b6-77a66d1bf18d"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 count          mean           std           min  \\\n",
              "PUISSANCE_DB  100000.0     94.994800      4.091044     90.000000   \n",
              "LONGUEUR      100000.0     40.019100     20.001416     10.000000   \n",
              "VOLUME        100000.0  54859.601670  25983.189634  10000.000000   \n",
              "COST          100000.0   6748.488865   3614.532674    522.300095   \n",
              "\n",
              "                       25%           50%           75%            max  \n",
              "PUISSANCE_DB     90.000000     95.000000    100.000000     100.000000  \n",
              "LONGUEUR         20.000000     40.000000     60.000000      70.000000  \n",
              "VOLUME        32352.750000  54933.000000  77364.000000  100000.000000  \n",
              "COST           3770.709606   6411.314488   9291.256794   22373.843832  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-314a9da1-bfc6-4ed1-8622-b98fe3957e0c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>PUISSANCE_DB</th>\n",
              "      <td>100000.0</td>\n",
              "      <td>94.994800</td>\n",
              "      <td>4.091044</td>\n",
              "      <td>90.000000</td>\n",
              "      <td>90.000000</td>\n",
              "      <td>95.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LONGUEUR</th>\n",
              "      <td>100000.0</td>\n",
              "      <td>40.019100</td>\n",
              "      <td>20.001416</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>40.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>70.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VOLUME</th>\n",
              "      <td>100000.0</td>\n",
              "      <td>54859.601670</td>\n",
              "      <td>25983.189634</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>32352.750000</td>\n",
              "      <td>54933.000000</td>\n",
              "      <td>77364.000000</td>\n",
              "      <td>100000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>COST</th>\n",
              "      <td>100000.0</td>\n",
              "      <td>6748.488865</td>\n",
              "      <td>3614.532674</td>\n",
              "      <td>522.300095</td>\n",
              "      <td>3770.709606</td>\n",
              "      <td>6411.314488</td>\n",
              "      <td>9291.256794</td>\n",
              "      <td>22373.843832</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-314a9da1-bfc6-4ed1-8622-b98fe3957e0c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-314a9da1-bfc6-4ed1-8622-b98fe3957e0c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-314a9da1-bfc6-4ed1-8622-b98fe3957e0c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#c'est une description sur les variable qui sont pas numerique \n",
        "a=df.dtypes[df.dtypes == \"object\"].index\n",
        "df[a].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "9MfkpjpA4KLr",
        "outputId": "b8a6a37a-103a-4ecd-8c16-53a9bc6241ce"
      },
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       BLUETOOTH RESPONSABLE_ACHAT     FOURNISSEUR      PAYS          MANAGER  \\\n",
              "count     100000            100000          100000    100000           100000   \n",
              "unique         5                 8              30        27                2   \n",
              "top         FAUX     Vincent Abril  Fournisseur 11  Malaisie  Pierre L'Hostis   \n",
              "freq       25105             25126            3448      7185            50227   \n",
              "\n",
              "              DATE  \n",
              "count       100000  \n",
              "unique          16  \n",
              "top     2021-12-31  \n",
              "freq          6408  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a5043dff-e38d-4abb-a28c-b26776811e7e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BLUETOOTH</th>\n",
              "      <th>RESPONSABLE_ACHAT</th>\n",
              "      <th>FOURNISSEUR</th>\n",
              "      <th>PAYS</th>\n",
              "      <th>MANAGER</th>\n",
              "      <th>DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>30</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>FAUX</td>\n",
              "      <td>Vincent Abril</td>\n",
              "      <td>Fournisseur 11</td>\n",
              "      <td>Malaisie</td>\n",
              "      <td>Pierre L'Hostis</td>\n",
              "      <td>2021-12-31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>25105</td>\n",
              "      <td>25126</td>\n",
              "      <td>3448</td>\n",
              "      <td>7185</td>\n",
              "      <td>50227</td>\n",
              "      <td>6408</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5043dff-e38d-4abb-a28c-b26776811e7e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a5043dff-e38d-4abb-a28c-b26776811e7e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a5043dff-e38d-4abb-a28c-b26776811e7e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#verifiant s'il ya des redoublons \n",
        "df.drop_duplicates()\n",
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t0OsUT9a2_Vx",
        "outputId": "c9bdb7c2-ee20-4915-9d71-a7818e71ff41"
      },
      "execution_count": 167,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100000, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 167
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Découvrir et Visualiser Les Données pour mieux Comprendre"
      ],
      "metadata": {
        "id": "BluRBV9U4alO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#visualisation de la variable COST \n",
        "plt.figure(figsize = (10,8))\n",
        "sns.distplot(df['COST'],hist = True, label = 'Cost')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "y4jzyIYo3m76",
        "outputId": "8e69f7ee-1508-49c7-c57e-711edeacaf42"
      },
      "execution_count": 168,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning:\n",
            "\n",
            "`distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# la pour mieux vusaliser la fort correlation entre la varibale Volume et COST\n",
        "df.plot(kind=\"scatter\",x=\"COST\",y=\"VOLUME\",alpha=0.1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "Za7kCo228fwf",
        "outputId": "1793c46b-0bda-40a5-f105-2375419d900b"
      },
      "execution_count": 169,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09dce5e7d0>"
            ]
          },
          "metadata": {},
          "execution_count": 169
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas.plotting import scatter_matrix\n",
        "attribues=[\"COST\",\"VOLUME\",\"LONGUEUR\",\"PUISSANCE_DB\"]\n",
        "scatter_matrix(df [attribues],figsize=(12,8))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "BuhSR4p684_t",
        "outputId": "c0d5dc24-bc38-4536-eb31-22884e3672e5"
      },
      "execution_count": 170,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f09de17e510>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09de196d50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09de16e050>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f053fc50>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f09f0528390>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f058e490>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f060f650>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f0665d90>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f09f0665110>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09e0109f90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f0690410>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f071bed0>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f09f0771d10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f1675f90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f232e9d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f09f246e5d0>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 170
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 16 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#visualisation entre la Longeur de l'enceinte et le cost \n",
        "sns.boxplot(x='LONGUEUR', y='COST',data=df )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "yB2E0mSHxeIR",
        "outputId": "b90595f1-ef08-42f0-e03c-22b470b3a5a4"
      },
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f5b43810>"
            ]
          },
          "metadata": {},
          "execution_count": 171
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(['RESPONSABLE_ACHAT',\t'PUISSANCE_DB']).mean()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "SZk97anl0flS",
        "outputId": "3724e422-0ba7-4db9-86c9-2fb5dd0c7b2b"
      },
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                 LONGUEUR        VOLUME         COST  \\\n",
              "RESPONSABLE_ACHAT PUISSANCE_DB                                         \n",
              "Laure Pomerleau   90            39.802391  54724.161015  6574.974102   \n",
              "                  95            40.204616  54755.157507  6723.906671   \n",
              "                  100           40.303596  54052.308034  6779.257775   \n",
              "Laure Pomerlo     90            40.511310  55019.672243  6637.242293   \n",
              "                  95            39.791816  54748.938263  6742.905203   \n",
              "                  100           39.935992  54704.473904  6901.995267   \n",
              "Magnolia Binet    90            39.638783  55182.255703  6625.485590   \n",
              "                  95            39.697417  55345.722755  6775.770825   \n",
              "                  100           39.743771  55372.878937  6913.709853   \n",
              "Magnolia Biné     90            40.515123  55162.426276  6667.062337   \n",
              "                  95            39.943503  54877.018669  6812.477420   \n",
              "                  100           40.155094  55562.008351  6937.137486   \n",
              "Tristan Veronneau 90            40.284069  54861.045681  6645.610619   \n",
              "                  95            40.473608  54405.692697  6667.305775   \n",
              "                  100           40.254823  54141.137969  6794.330179   \n",
              "Tristan veronneau 90            40.104958  55403.714803  6721.377376   \n",
              "                  95            39.035311  55006.289043  6731.766696   \n",
              "                  100           39.730592  54661.355548  6873.505518   \n",
              "Vincent Abril     90            39.912465  54550.896008  6561.741694   \n",
              "                  95            40.120380  55032.364151  6763.294956   \n",
              "                  100           40.210884  54235.830566  6806.271880   \n",
              "tristan Veronneau 90            39.768354  55107.195652  6701.986802   \n",
              "                  95            39.381443  55147.628130  6803.665906   \n",
              "                  100           40.522574  55502.525062  6985.870229   \n",
              "\n",
              "                                WATERPROOF  \n",
              "RESPONSABLE_ACHAT PUISSANCE_DB              \n",
              "Laure Pomerleau   90              0.495975  \n",
              "                  95              0.492743  \n",
              "                  100             0.488323  \n",
              "Laure Pomerlo     90              0.494816  \n",
              "                  95              0.508256  \n",
              "                  100             0.495076  \n",
              "Magnolia Binet    90              0.509743  \n",
              "                  95              0.488561  \n",
              "                  100             0.496239  \n",
              "Magnolia Biné     90              0.499764  \n",
              "                  95              0.488086  \n",
              "                  100             0.505607  \n",
              "Tristan Veronneau 90              0.493282  \n",
              "                  95              0.495662  \n",
              "                  100             0.494722  \n",
              "Tristan veronneau 90              0.523706  \n",
              "                  95              0.507827  \n",
              "                  100             0.490606  \n",
              "Vincent Abril     90              0.500584  \n",
              "                  95              0.504274  \n",
              "                  100             0.497394  \n",
              "tristan Veronneau 90              0.505702  \n",
              "                  95              0.509573  \n",
              "                  100             0.492001  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9aa7e804-ae52-42a2-87df-7a48eb0e4202\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>LONGUEUR</th>\n",
              "      <th>VOLUME</th>\n",
              "      <th>COST</th>\n",
              "      <th>WATERPROOF</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RESPONSABLE_ACHAT</th>\n",
              "      <th>PUISSANCE_DB</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Laure Pomerleau</th>\n",
              "      <th>90</th>\n",
              "      <td>39.802391</td>\n",
              "      <td>54724.161015</td>\n",
              "      <td>6574.974102</td>\n",
              "      <td>0.495975</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>40.204616</td>\n",
              "      <td>54755.157507</td>\n",
              "      <td>6723.906671</td>\n",
              "      <td>0.492743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>40.303596</td>\n",
              "      <td>54052.308034</td>\n",
              "      <td>6779.257775</td>\n",
              "      <td>0.488323</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Laure Pomerlo</th>\n",
              "      <th>90</th>\n",
              "      <td>40.511310</td>\n",
              "      <td>55019.672243</td>\n",
              "      <td>6637.242293</td>\n",
              "      <td>0.494816</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>39.791816</td>\n",
              "      <td>54748.938263</td>\n",
              "      <td>6742.905203</td>\n",
              "      <td>0.508256</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>39.935992</td>\n",
              "      <td>54704.473904</td>\n",
              "      <td>6901.995267</td>\n",
              "      <td>0.495076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Magnolia Binet</th>\n",
              "      <th>90</th>\n",
              "      <td>39.638783</td>\n",
              "      <td>55182.255703</td>\n",
              "      <td>6625.485590</td>\n",
              "      <td>0.509743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>39.697417</td>\n",
              "      <td>55345.722755</td>\n",
              "      <td>6775.770825</td>\n",
              "      <td>0.488561</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>39.743771</td>\n",
              "      <td>55372.878937</td>\n",
              "      <td>6913.709853</td>\n",
              "      <td>0.496239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Magnolia Biné</th>\n",
              "      <th>90</th>\n",
              "      <td>40.515123</td>\n",
              "      <td>55162.426276</td>\n",
              "      <td>6667.062337</td>\n",
              "      <td>0.499764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>39.943503</td>\n",
              "      <td>54877.018669</td>\n",
              "      <td>6812.477420</td>\n",
              "      <td>0.488086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>40.155094</td>\n",
              "      <td>55562.008351</td>\n",
              "      <td>6937.137486</td>\n",
              "      <td>0.505607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Tristan Veronneau</th>\n",
              "      <th>90</th>\n",
              "      <td>40.284069</td>\n",
              "      <td>54861.045681</td>\n",
              "      <td>6645.610619</td>\n",
              "      <td>0.493282</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>40.473608</td>\n",
              "      <td>54405.692697</td>\n",
              "      <td>6667.305775</td>\n",
              "      <td>0.495662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>40.254823</td>\n",
              "      <td>54141.137969</td>\n",
              "      <td>6794.330179</td>\n",
              "      <td>0.494722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Tristan veronneau</th>\n",
              "      <th>90</th>\n",
              "      <td>40.104958</td>\n",
              "      <td>55403.714803</td>\n",
              "      <td>6721.377376</td>\n",
              "      <td>0.523706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>39.035311</td>\n",
              "      <td>55006.289043</td>\n",
              "      <td>6731.766696</td>\n",
              "      <td>0.507827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>39.730592</td>\n",
              "      <td>54661.355548</td>\n",
              "      <td>6873.505518</td>\n",
              "      <td>0.490606</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Vincent Abril</th>\n",
              "      <th>90</th>\n",
              "      <td>39.912465</td>\n",
              "      <td>54550.896008</td>\n",
              "      <td>6561.741694</td>\n",
              "      <td>0.500584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>40.120380</td>\n",
              "      <td>55032.364151</td>\n",
              "      <td>6763.294956</td>\n",
              "      <td>0.504274</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>40.210884</td>\n",
              "      <td>54235.830566</td>\n",
              "      <td>6806.271880</td>\n",
              "      <td>0.497394</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">tristan Veronneau</th>\n",
              "      <th>90</th>\n",
              "      <td>39.768354</td>\n",
              "      <td>55107.195652</td>\n",
              "      <td>6701.986802</td>\n",
              "      <td>0.505702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>39.381443</td>\n",
              "      <td>55147.628130</td>\n",
              "      <td>6803.665906</td>\n",
              "      <td>0.509573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>40.522574</td>\n",
              "      <td>55502.525062</td>\n",
              "      <td>6985.870229</td>\n",
              "      <td>0.492001</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9aa7e804-ae52-42a2-87df-7a48eb0e4202')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9aa7e804-ae52-42a2-87df-7a48eb0e4202 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9aa7e804-ae52-42a2-87df-7a48eb0e4202');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#leS top 5 Responsable d'achat qui en investi . \n",
        "top_5_Responsbale_achat = df.sort_values(by=\"COST\", ascending=True).head(5)\n",
        "top_5_Responsbale_achat.plot(x=\"RESPONSABLE_ACHAT\", y=\"COST\", kind=\"bar\", rot=5, fontsize=8,figsize=(12,5))\n",
        "#le meilleur fournisseur c'est Vincent Abril ->Magnolia Biné-> tristan Veronneau->Laure Pomerleau"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "W85qXOY_2YfD",
        "outputId": "73ae9371-55ad-49b8-f942-6cb57f6d1393"
      },
      "execution_count": 173,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09dce62950>"
            ]
          },
          "metadata": {},
          "execution_count": 173
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#les top  pays qui on fait els investisement . \n",
        "top_4_pays = df.sort_values(by=\"COST\", ascending=False).head(4)\n",
        "top_4_pays.plot(x=\"PAYS\", y=\"COST\", kind=\"bar\", rot=5, fontsize=10, figsize=(12,5))\n",
        "#le smeilleur pays qui a plus d'invistisement sont:  USA, Salvador,Alemagne,pHILIPPINES; "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "RbVXZWQE2IbY",
        "outputId": "4e0ad8cd-c5e1-42a8-c6fd-4dda3308cd1c"
      },
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f0593290>"
            ]
          },
          "metadata": {},
          "execution_count": 174
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#visualisation entre les responsable d'achat et la puissance DB asur le COst \n",
        "sns.boxplot(x='RESPONSABLE_ACHAT', y='COST',data=df , hue='PUISSANCE_DB')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "LN2PsVyC7CT6",
        "outputId": "1cc412bf-564e-478f-b3cc-02d7800883f6"
      },
      "execution_count": 175,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f0684a90>"
            ]
          },
          "metadata": {},
          "execution_count": 175
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"FOURNISSEUR\"].value_counts();\n",
        "df['FOURNISSEUR'] = df.FOURNISSEUR.str.replace(\"Fournisseur\", 'F')\n",
        "plt.figure(figsize=(30, 10))\n",
        "sns.countplot(df['FOURNISSEUR'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "qPfFdFIB8WQM",
        "outputId": "66db714e-b691-451f-ae21-6feb98705d4b"
      },
      "execution_count": 176,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning:\n",
            "\n",
            "Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2160x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# visualiser le nombre des appareils qui contient Bluetooth \n",
        "plt.figure(figsize = (12,5))\n",
        "sns.countplot(x=df['BLUETOOTH'])\n",
        "plt.show()\n",
        "#la plupart de sappareil qui vient sont de type bluethtoot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "F_Cwj3yOD6YZ",
        "outputId": "f395fd08-13a0-40f5-a47a-ba359a3d2002"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# visualiser le nombre des appareils qui contient WAteroof\n",
        "plt.figure(figsize = (12,5))\n",
        "sns.countplot(df['WATERPROOF'])\n",
        "plt.show()\n",
        "#la plupart de sappareil qui vient sont de type NOT WATEROOF"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "3n9JCal-BAA8",
        "outputId": "16721bce-8c7d-469b-dac1-28846306071f"
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning:\n",
            "\n",
            "Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#visualiser \n",
        "plt.figure(figsize = (32,10))\n",
        "sns.countplot(x=df['PAYS'])\n",
        "plt.show()\n",
        "#La Malaisie est le pays qui fournit souvent à Bose des produits"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "jASLx58JIDfR",
        "outputId": "43618d30-c910-4f26-8f68-36a4930c3b48"
      },
      "execution_count": 179,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2304x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# visualiser le pays avec le plus grand  purchase . COST comme dans l'exemple avant /. \n",
        "fig = px.sunburst(data_frame=df, path=['PAYS'], values='COST', title='country wise purchase cost')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "QZ4jv0n-KmcH",
        "outputId": "6b9e41d6-b0b4-4bf1-d0ae-793d970a40b8"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"211b7482-2023-4a8c-941c-c66445efe368\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"211b7482-2023-4a8c-941c-c66445efe368\")) {                    Plotly.newPlot(                        \"211b7482-2023-4a8c-941c-c66445efe368\",                        [{\"branchvalues\":\"total\",\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"labels=%{label}<br>COST=%{value}<br>parent=%{parent}<br>id=%{id}<extra></extra>\",\"ids\":[\"Afrique du Sud\",\"Alemagne\",\"Allemagne\",\"Argentine\",\"Benin\",\"Br\\u00e9sil\",\"Chili\",\"Chine\",\"Colombie\",\"Congo\",\"France\",\"Gabon\",\"Indon\\u00e9sie\",\"Italie\",\"Japon\",\"Malaisie\",\"Mexique\",\"Philippine\",\"Philippines\",\"Roumanie\",\"Salvador\",\"Soudan\",\"Soudan#\",\"Togo\",\"Turquie\",\"USA\",\"congo\"],\"labels\":[\"Afrique du Sud\",\"Alemagne\",\"Allemagne\",\"Argentine\",\"Benin\",\"Br\\u00e9sil\",\"Chili\",\"Chine\",\"Colombie\",\"Congo\",\"France\",\"Gabon\",\"Indon\\u00e9sie\",\"Italie\",\"Japon\",\"Malaisie\",\"Mexique\",\"Philippine\",\"Philippines\",\"Roumanie\",\"Salvador\",\"Soudan\",\"Soudan#\",\"Togo\",\"Turquie\",\"USA\",\"congo\"],\"name\":\"\",\"parents\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"values\":[20306948.02849049,28047466.79051637,29682916.132105578,24232045.387176923,21164421.791504078,24510901.3165621,24503965.952557344,23477811.618973132,24835418.85439315,20168756.750249293,28830788.504967716,20580440.552631665,23491128.76949501,28383862.60830759,23425053.84413373,48039555.637600355,23430570.93813891,24304152.217484854,23964950.713374257,29729337.50484702,24577277.33308457,21356132.245433405,20251947.232589576,20154312.069948655,28583287.16357034,23874065.38729299,20941371.162815887],\"type\":\"sunburst\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"country wise purchase cost\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('211b7482-2023-4a8c-941c-c66445efe368');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Correlation entre les Données ."
      ],
      "metadata": {
        "id": "HlpFR-KO4sUw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#visualiser s'il y a des varibale manquante \n",
        "Missing_value=df.isna().sum().plot(kind='bar',figsize=(20,10))\n",
        "plt.title(\"Données manquante\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "wSyvMSUP3B5b",
        "outputId": "929a1345-e8c9-43c3-a3af-d32dd230be6e"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# recherche d'une correlation entre les donnée // on peut utilise la methode de cercle de coorelation on va la chercher apres . \n",
        "corr_matrix=df.corr()\n",
        "corr_matrix[\"COST\"].sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WeQUzLdH3DUx",
        "outputId": "c32d3289-e4e4-4e1c-c40d-187d75058cdb"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "COST            1.000000\n",
              "VOLUME          0.882266\n",
              "LONGUEUR        0.234289\n",
              "PUISSANCE_DB    0.027020\n",
              "WATERPROOF     -0.003820\n",
              "Name: COST, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#visualiser la coorelation entre les varibales  .\n",
        "f,ax = plt.subplots(figsize=(16, 7))\n",
        "sns.heatmap(df.corr(), annot=True, linewidths=.5,ax=ax)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "vq5w3ii64yqr",
        "outputId": "1ab83fd2-256d-47a9-cdcf-8c3ea87ddea0"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x504 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#la pour le moment on peux constater qu'il a une coorelation qui assez forte c'est la corelation entre COST et Volume"
      ],
      "metadata": {
        "id": "Wuhhg5aA59ws"
      },
      "execution_count": 184,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Detection des outliers"
      ],
      "metadata": {
        "id": "J-Bq-DVfIYB6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "##looking at cost box plot\n",
        "sns.boxplot(x=df['COST'])\n",
        "# alors on voit qu'il a des valeurs abberantes . "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "kMhdWKlp_GM_",
        "outputId": "a9e3a14d-4460-4fe6-cb99-e3ec90012fe8"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f220bb90>"
            ]
          },
          "metadata": {},
          "execution_count": 185
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAEGCAYAAABbzE8LAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAANsUlEQVR4nO3df2zcdR3H8de77QaDSaQdmVimZVbDpkNl1fAHI7gUmPtnmvgH/7hFSUiMlkFiIkKT3pImRhOJWwURHLEzKv6ORuZkiIlE5UenbINV5DaLWzN+dfJj7Bfd3v7x/ay59lpYr9/d+9o+H0nTu8/3e3ff+/Tuubvv/Zi5uwAA1VcXvQEAMFsRYAAIQoABIAgBBoAgBBgAgjRMZuUFCxZ4S0vLWdoUAJiZduzY8Yq7XzR2fFIBbmlpUV9fX35bBQCzgJk9P944uyAAIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCTOr/hJtNenp6VCwWozdjlMHBQUlSc3Nz8JZMrLW1VR0dHdGbAUwLBHgCxWJRTz3dr5PnNUZvyoj6I69Jkl44Xpt/tvojh6I3AZhWavOeXCNOnteoo5etjt6MEfP+tVWSamqbSp3ePgBnhn3AABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCEAANAEAIMAEEIMAAEIcAAEKQqAe7p6VFPT081LgpADrjPVkdDNS6kWCxW42IA5IT7bHWwCwIAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAjSEL0BAGrPoUOHtH//fl1zzTW5neeKFSv06KOPjrusvr5eJ0+eHDVmZpozZ47q6urU3d2tzZs36/jx4zp48KC6u7vV29urm2++WXfeeafcXTfeeKO6urq0ceNGtba2amhoSBs2bFBXV5eamprKjpeqdNlU8QgYQJn9+/fnfp4TxVdSWXwlyd114sQJHTt2TIVCQf39/dq3b5+OHj2qrq4u7d69W93d3dqzZ4/6+/tVKBT05ptvqru7W5LU29ur3bt3a8uWLeMeL1XpsqkiwABGeeSRR6I3oczhw4fLjru7BgYGytYZGBhQX1+ftm3bJnfXtm3bVCwWRx0fGhoaOd3Q0FBFy/JQlV0Qg4ODOnr0qNavX1+Ni8tFsVhU3QmP3oxppe7Y6yoW35hWf2eU27lzZ/QmTFmhUNCpU6ckZY+uu7u7Rx3fsmWLbr31VknZI9xKluXhHR8Bm9lNZtZnZn0vv/xybhcMAGfL4cOHNTw8LEkaHh7WwMDAqOPbt28fWffhhx+uaFke3vERsLvfK+leSWpra6voIWFzc7MkaePGjZWcPMT69eu1Y9+L0ZsxrZw69wK1Ll44rf7OKNfe3j4Snelq/vz5OnbsmIaHh9XQ0KBLLrlEBw4cGDl+7bXXjqzb3t6urVu3TnpZHtgHDGCU22+/PXoTpqxQKKiuLstbfX29Ojs7Rx1fu3btyLrr1q2raFkeCDCAUVauXBm9CWXmz59fdtzM1NLSUrZOS0uL2tratGrVKpmZVq1apdbW1lHHS99O1tTUVNGyPBBgAGUWLVqU+3muWLFiwmX19fVlY2amuXPn6txzz1WhUNCSJUu0ePFizZs3Txs2bNCyZcvU2dmppUuXasmSJSoUCjr//PPV2dkpKXv0umzZspFHrWOPl6p02VTxQQwAZRobG9XY2FhT+/Pb2tpGHV++fLkk6e677x4Ze/DBB0cONzU1adOmTRMeL1XpsqniETAABCHAABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCEAANAEAIMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQhAADQBACDABBCDAABCHAABCkoRoX0traWo2LAZAT7rPVUZUAd3R0VONiAOSE+2x1sAsCAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgDdEbUMvqjxzSvH9tjd6MEfVHhiSpprapVP2RQ5IWRm8GMG0Q4Am0trZGb0KZwcFhSVJzc61GbmFNzhtQqwjwBDo6OqI3AcAMxz5gAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIIQYAAIQoABIAgBBoAgBBgAghBgAAhCgAEgCAEGgCAEGACCEGAACEKAASAIAQaAIAQYAIKYu5/5ymYvS3r+bVZZIOmVqW7UDMOcjI95GR/zUm4mzMn73f2isYOTCvA7MbM+d2/L7QxnAOZkfMzL+JiXcjN5TtgFAQBBCDAABMk7wPfmfH4zAXMyPuZlfMxLuRk7J7nuAwYAnDl2QQBAEAIMAEFyCbCZrTKzZ82saGa35XGetc7MBsxst5k9ZWZ9aazRzLab2XPp94Vp3MxsU5qfXWZ2Rcn5rEvrP2dm66KuTyXM7H4ze8nMni4Zy20OzGx5muNiOq1V9xpWZoJ5KZjZYLq9PGVmq0uWfT1dx2fN7PqS8XHvV2Z2qZk9nsZ/ZmZzq3ftKmNmi8zsz2a2x8yeMbP1aXx2317cfUo/kuol7ZW0WNJcSTslLZ3q+db6j6QBSQvGjH1L0m3p8G2SvpkOr5b0B0km6UpJj6fxRkn70u8L0+ELo6/bJObgaklXSHr6bMyBpCfSupZO++no6zyFeSlI+uo46y5N95lzJF2a7kv1b3e/kvRzSTekw/dI+lL0dT6DOblY0hXp8Lsk/Ttd91l9e8njEfAnJRXdfZ+7n5D0gKQ1OZzvdLRGUm863CvpMyXjWzzzmKR3m9nFkq6XtN3dD7n7/yRtl7Sq2htdKXf/i6RDY4ZzmYO07AJ3f8yze9eWkvOqaRPMy0TWSHrA3Y+7+38kFZXdp8a9X6VHdSsl/TKdvnSOa5a7H3T3f6TDb0jql9SsWX57ySPAzZL2lxw/kMZmOpf0kJntMLOb0thCdz+YDr8gaWE6PNEczcS5y2sOmtPhsePT2VfS0+n7Tz/V1uTnpUnSq+4+PGZ82jCzFkkfl/S4ZvnthRfhKneVu18h6dOSvmxmV5cuTP8Kz+r3+DEHo3xP0gckfUzSQUnfjt2cGGY2X9KvJN3i7q+XLpuNt5c8AjwoaVHJ8UvS2Izm7oPp90uSfqPsKeOL6amQ0u+X0uoTzdFMnLu85mAwHR47Pi25+4vuftLdT0m6T9ntRZr8vAwpezreMGa85pnZHGXx/bG7/zoNz+rbSx4BflLSB9Mrs3Ml3SDpdzmcb80ys/PN7F2nD0u6TtLTyq736Vdl10n6bTr8O0lr0yu7V0p6LT3t+qOk68zswvSU9Lo0Np3lMgdp2etmdmXa77m25LymndORST6r7PYiZfNyg5mdY2aXSvqgsheTxr1fpUeJf5b0uXT60jmuWelvuFlSv7vfWbJodt9ecnqFc7WyVzX3Sroj+pXFs/2j7JXpnennmdPXWdn+uT9Jek7Sw5Ia07hJuivNz25JbSXn9UVlL7wUJX0h+rpNch5+quzp9FvK9rndmOccSGpTFqq9kr6r9MnNWv+ZYF5+lK73LmVxubhk/TvSdXxWJa/cT3S/Sre/J9J8/ULSOdHX+Qzm5Cpluxd2SXoq/aye7bcXPooMAEF4EQ4AghBgAAhCgAEgCAEGgCAEGACCNLzzKkD1mdl7JH1H0ickvSrpRUm3SJojqUfZx0zrlH3mv9vd3cwWKnuv6aK03oCkryl7C5gkvU/Sa+nnFXdvr9b1AcbD29BQc9Ib6f8mqdfd70ljH5V0gaQfKvv2r4fM7Dxln6z6vbvfZWbfl7TH3Tem01zu7rtKzveHad1fCqgB7IJALfqUpLdOx1eS3H2npA9J+qu7P5TGjkj6irKvMZSyrzw8UHKakfgCtYgAoxZ9RNKOccY/PHbc3fdKmm9mFyj75NTm9MXfd5jZe8/+pgKVI8CYMdz9j8o+pnufpMsk/dPMLordKmBiBBi16BlJy8cZ3zN23MwWSzrs6asNPfui7p+4++eVfaHN1eVnA9QGAoxa9Iikc0q+6F5mdrmyL6u5ysza09g8SZuU/bc2MrOV6YU5pW+r+4Ck/1Z524EzRoBRczx7a85nJbWb2V4ze0bSN5T9jwlrJHWa2bPKviXrSWXffCVlj477zGyXpL9L+oG7P1n1KwCcId6GBgBBeAQMAEEIMAAEIcAAEIQAA0AQAgwAQQgwAAQhwAAQ5P93A2/Xc8kn5wAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Supression des outliers dan sla varibale COST \n",
        "Q1=df['COST'].quantile(0.25)\n",
        "Q3=df['COST'].quantile(0.75)\n",
        "IQR=Q3-Q1\n",
        "print(\"Q1:\",Q1)\n",
        "print(\"Q3:\",Q3)\n",
        "print(\"IQR :\", IQR)\n",
        "Lower_Whisker = Q1-1.5*IQR\n",
        "Upper_Whisker = Q3+1.5*IQR\n",
        "print(\"Lower_Whisker :\",Lower_Whisker,\"Upper_Whisker:\",Upper_Whisker)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W1XijL5a_f3j",
        "outputId": "6abeefb0-f01e-4847-d11d-b257553dd669"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Q1: 3770.7096055322722\n",
            "Q3: 9291.256793957153\n",
            "IQR : 5520.54718842488\n",
            "Lower_Whisker : -4510.111177105047 Upper_Whisker: 17572.07757659447\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#viusaliser en boxplot la varibale Volume \n",
        "sns.boxplot(x=df['VOLUME'])\n",
        "# on voit qu'il a pas des outliers dans la varibale volume "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "G5st4d_jAZc4",
        "outputId": "3db1ab41-210f-4f35-8e46-70a554f692cf"
      },
      "execution_count": 188,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f044b790>"
            ]
          },
          "metadata": {},
          "execution_count": 188
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "b=df['MANAGER'].value_counts()\n",
        "b"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y4oDAfooB3T1",
        "outputId": "86429430-5805-4618-f022-9807018ae23c"
      },
      "execution_count": 189,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pierre L'Hostis    50227\n",
              "Cédric Grivet      49773\n",
              "Name: MANAGER, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 189
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['MANAGER'].hist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "0rJju25iD36O",
        "outputId": "79a75616-5cb9-4c14-f1c7-be7e99be21a1"
      },
      "execution_count": 190,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f09f036c650>"
            ]
          },
          "metadata": {},
          "execution_count": 190
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Analyse des Fournisseur ainsi . Analyse Exploratoire . (Date ,Fournisseur, Manager)"
      ],
      "metadata": {
        "id": "yWtmo-R3IfLm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['DATE'] = pd.to_datetime(df['DATE'], format='%Y-%m-%d')\n",
        "df['DATE']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WDw-vSYtG_si",
        "outputId": "0e05bf46-4f00-41e4-8363-66ffbad7fb55"
      },
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       2018-09-30\n",
              "1       2018-09-30\n",
              "2       2021-12-31\n",
              "3       2020-12-31\n",
              "4       2021-09-30\n",
              "           ...    \n",
              "99995   2021-12-31\n",
              "99996   2018-03-31\n",
              "99997   2018-06-30\n",
              "99998   2021-09-30\n",
              "99999   2018-09-30\n",
              "Name: DATE, Length: 100000, dtype: datetime64[ns]"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#extraction de l'année \n",
        "df['YEAR'] = pd.DatetimeIndex(df['DATE']).year\n",
        "df['YEAR']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SzkMMc7fHN6C",
        "outputId": "686c8e0c-31b4-4915-e67c-9f61cb2e4976"
      },
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        2018\n",
              "1        2018\n",
              "2        2021\n",
              "3        2020\n",
              "4        2021\n",
              "         ... \n",
              "99995    2021\n",
              "99996    2018\n",
              "99997    2018\n",
              "99998    2021\n",
              "99999    2018\n",
              "Name: YEAR, Length: 100000, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#extraction du mois\n",
        "df['MONTH'] = pd.DatetimeIndex(df['DATE']).month\n",
        "df['MONTH']\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kt1yXVD2HV9c",
        "outputId": "7503ceef-7ba7-4a37-efcb-cbac4413c776"
      },
      "execution_count": 193,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         9\n",
              "1         9\n",
              "2        12\n",
              "3        12\n",
              "4         9\n",
              "         ..\n",
              "99995    12\n",
              "99996     3\n",
              "99997     6\n",
              "99998     9\n",
              "99999     9\n",
              "Name: MONTH, Length: 100000, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#extraction des jours\n",
        "df['DAY'] = pd.DatetimeIndex(df['DATE']).day\n",
        "df['DAY']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pyp_GrzzHsi2",
        "outputId": "1e94b440-d95e-489c-80b4-c811510e9da0"
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        30\n",
              "1        30\n",
              "2        31\n",
              "3        31\n",
              "4        30\n",
              "         ..\n",
              "99995    31\n",
              "99996    31\n",
              "99997    30\n",
              "99998    30\n",
              "99999    30\n",
              "Name: DAY, Length: 100000, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 194
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "t5VbuRvvKFP5"
      },
      "execution_count": 194,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "name": "Bienvenue dans Colaboratory",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}